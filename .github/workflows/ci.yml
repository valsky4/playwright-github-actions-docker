name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'web'
        type: choice
        options:
          - api
          - web
          - both
          - all browsers
          - all browsers and api
      browser:
        description: 'Browser to run web tests on (required for web tests)'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - webkit
          - firefox

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      DEV_API_URL: ${{ secrets.DEV_API_URL }}
      DEV_CLIENT: ${{ secrets.DEV_CLIENT }}
      DEV_DB: ${{ secrets.DEV_DB }}
      FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Browsers
        if: contains('web,both,all browsers,all browsers and api', github.event.inputs.test_type)
        run: |
          if [[ "${{ github.event.inputs.test_type }}" == "web" || "${{ github.event.inputs.test_type }}" == "both" ]]; then
            playwright install --with-deps ${{ github.event.inputs.browser }}
          else
            playwright install --with-deps
          fi

      - name: Run API tests
        if: contains('api,both,all browsers and api', github.event.inputs.test_type)
        run: |
          pytest -m apitest

      - name: Run Web tests
        if: contains('web,both,all browsers,all browsers and api', github.event.inputs.test_type)
        run: |
          sudo mkdir -p test-results/traces
          if [[ "${{ github.event.inputs.test_type }}" == "web" || "${{ github.event.inputs.test_type }}" == "both" ]]; then
            pytest -m webtest --browser ${{ github.event.inputs.browser }} --output=test-results/traces
          else
            pytest -m webtest \
              --browser chromium \
              --browser firefox \
              --browser webkit \
              -n auto \
              --output=test-results/traces
          fi

      - name: Upload Playwright Traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results/traces/
